// package Lec30;

public class Symmetric {
    public class TreeNode {
     int val;
     TreeNode left;
     TreeNode right;
     TreeNode() {}             //constructor
     TreeNode(int val) { this.val = val; }
     TreeNode(int val, TreeNode left, TreeNode right) {
          this.val = val;
          this.left = left;
          this.right = right;
      }
  }
 
class Solution {
    public boolean isSymmetric(TreeNode root) {
        return check(root,root);
    }
        public boolean check(TreeNode root1,TreeNode root2){
            if(root1==null && root2 ==null)return true;
            if((root1 !=null & root2==null)||(root1 ==null && root2 != null))return false;
            if(root1.val != root2.val)return false;

            boolean c1 =check(root1.left ,root2.right);
            boolean c2 =check(root1.right ,root2.left);

            return c1&&c2;
        }
    }

}
